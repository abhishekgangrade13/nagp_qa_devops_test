pipeline {
    agent any

    environment{
      notifyEmail = "abhishek.gangrade@nagarro.com"
    }
    triggers{
      cron('0 12 * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Build your Maven project
                bat 'mvn clean install'
            }
        }

        stage ('Unit Test'){
            steps {
                bat 'mvn test'
            }
        }
        stage('SonarQube analysis') {
                steps{
                withSonarQubeEnv('nagp_qa_sonarqube_test') {
                    bat "mvn sonar:sonar"
                }
            }
        }
        stage ('Server'){
            steps {
                rtServer (
                    id: "Artifactory",
                    url: 'http://localhost:8082/artifactory',
                    username: 'admin',
                    password: 'Ecosmar@2023',
                    bypassProxy: true,
                    timeout: 300
                )
            }
        }

        stage('Upload'){
            steps{
                rtUpload (
                    serverId: "Artifactory" ,
                    spec: '''{
                        "files": [
                            {
                                "pattern": "*.jar",
                                "target": "nagp_artifacts-libs-release-local"
                            }
                        ]
                    }''',
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "Artifactory"
                )
            }
        }
    }

    post {
        success {
            // This block will run if the build succeeds
            echo 'Build succeeded!'
        }
        failure {
            // This block will run if the build fails
            echo 'Build failed!'
        }
    }
}
